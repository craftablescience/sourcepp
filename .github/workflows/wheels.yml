name: Build Wheels
on:
  workflow_dispatch:
    inputs:
      version:
        type: string
        required: true
        default: YYYY.MM.DD
        description: 'The package version'
      release:
        type: boolean
        required: true
        default: false
        description: 'Push a release to PyPI'

jobs:
  build_sdist:
    name: Build SDist
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: '${{github.workspace}}/lang/python'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5
        with:
          submodules: recursive

      - name: Configure CMake
        working-directory: '${{github.workspace}}'
        run: cmake -G "Unix Makefiles" -B build -DCMAKE_BUILD_TYPE=Release -DSOURCEPP_BUILD_PYTHON_WRAPPERS=ON -DSOURCEPP_VERSION="${{inputs.version}}"

      - name: Build SDist
        run: |
          pipx run build --sdist

      - name: Check Metadata
        run: |
          pipx run twine check dist/*

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-sdist
          path: '${{github.workspace}}/lang/python/dist/*.tar.gz'

  build_bdist:
    name: Build BDist (${{matrix.os}})
    runs-on: ${{matrix.os}}
    defaults:
      run:
        working-directory: '${{github.workspace}}/lang/python'
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, windows-2022]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5
        with:
          submodules: recursive

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Configure CMake
        working-directory: '${{github.workspace}}'
        run: cmake -G "Unix Makefiles" -B build -DCMAKE_BUILD_TYPE=Release -DSOURCEPP_BUILD_PYTHON_WRAPPERS=ON -DSOURCEPP_VERSION="${{inputs.version}}"

      - name: Build BDist
        run: |
          python -m pip install cibuildwheel==3.1.1
          python -m cibuildwheel --output-dir dist

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-bdist-${{matrix.os}}
          path: '${{github.workspace}}/lang/python/dist/*.whl'

  upload_release:
    name: Upload a Release
    if: inputs.release
    needs:
     - build_sdist
     - build_bdist
    runs-on: ubuntu-latest
    environment:
      name: pypi-release
      url: https://pypi.org/p/sourcepp
    permissions:
      id-token: write
    steps:
      - name: Download Wheels
        uses: actions/download-artifact@v4
        with:
          pattern: dist-*
          path: dist
          merge-multiple: true

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
